import pygame

pygame.init()  
pygame.display.set_caption("space invader")  # sets the window title
screen = pygame.display.set_mode((1000, 1000))  # creates game screen
clock = pygame.time.Clock() #set up clock
gameover = False #variable to run our game look

xpos = 500
ypos = 900
moveLeft = False
moveRight = False

timer = 0;

class Alien:
    def __init__(self, position_x, position_y):
        self.position_x = position_x
        self. position_y = position_y
        self.isAlive = True
        self.direction = 1
    def draw(self):
        pygame.draw.rect(screen, (250, 250, 250), (self.position_x, self.position_y, 40, 40))
    
    def move(self, time):
        #reset what direction you're moving every 8 steps
        if timer % 800==0:
            self.position_y += 100 #move down
            self.direction *=-1#flip direction
            return 0#reset timer to 0
        
        
        if time % 100 == 0:
            self.position_x+=50*self.direction#move right
            
        return time
    
armada = []
for i in range(4):#handles rows
    for j in range (9):#hanfles columns
        armada.append(Alien(j*80+50, i*90+50))#push Alien obejcts into list
class Bullet:
    def __init__ (self,xpos,ypos):
        self.xpos = xpos
        self.ypos = ypos
        self.isAlive = False
    def mover(self, xpos, ypos):
        if self.isAlive == True:
            self.ypos-=5
        if self.bullet_y < 0:
            self.isAlive = False
            self.xpos = xpos
            self.ypos = ypos
    def draw(self):
        pygame.draw.rect(screen, (250,250,250), (self.xpos, self.ypos, 3, 20))
        
    bullet = Bullet(xpos+28,ypos)
        
        
while not gameover:
    clock.tick(60)
    timer +=1
    # Input Section-----------------------------
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            gameover = True
            
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                moveLeft = True
                
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT:
                moveLeft = False
            
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_RIGHT:
                moveRight = True
                
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_RIGHT:
                moveRight = False
    #physics section ------------------------------
    if shoot == True:
        bullet.isAlive = True
        
    if bullet.isAlive == True:
        bulet.move(xpos+28, ypos)
    else:
        bullet.xpos = xpos + 28
        bullet.ypos = ypos
        
    #check variables from the input section
    if moveLeft == True:
        vx =-5
        
    elif moveRight == True:
        vx = 5
        
    else:
        vx = 0
        
    for i in range (len(armada)):
        timer = armada[i].move(timer)
            
    #update player position
    xpos += vx
    #render section-----------------------
    
    screen.fill((0,0,0))
    
    pygame.draw.rect(screen, (0,200,0), (xpos, 900 , 60,20))
    
    pygame.draw.rect(screen, (0,200,0), (xpos+10, 890, 40,20))

    pygame.draw.rect(screen, (0,200,0), (xpos+20, 875, 20,20))

    pygame.draw.rect(screen, (0,200,0), (xpos+28, 870, 5,10))
    
    for i in range (len(armada)):
        armada[i].draw()
    pyagme.bullet()
    pygame.display.flip()
    
#end game loop
    
pygame.quit()

